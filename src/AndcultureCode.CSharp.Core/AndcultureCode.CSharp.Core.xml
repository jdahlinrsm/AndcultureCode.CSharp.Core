<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AndcultureCode.CSharp.Core</name>
    </assembly>
    <members>
        <member name="T:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes">
            <summary>
            Commonly used Claim types for APIs
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.IS_SUPER_ADMIN">
            <summary>
            Is the current user elevated to super admin
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.ROLE_ID">
            <summary>
            Active Role Id
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.ROLE_IDS">
            <summary>
            Available Role Ids
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.ROLE_TYPE">
            <summary>
            Active Role Type
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.USER_ID">
            <summary>
            Current User Id
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApiClaimTypes.USER_LOGIN_ID">
            <summary>
            Current User Login Id
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.ApplicationConstants">
            <summary>
            Common application constants
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ApplicationConstants.API_DATABASE_CONFIGURATION_KEY">
            <summary>
            Key name used to identify the API web application's primary
            database in the 'ConnectionStrings' section
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.CacheOptions">
            <summary>
            Common cache configuration options
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.CacheOptions.DAY">
            <summary>
            Sliding cache expiration of a day (24 hours)
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Constants.CacheOptions.Minutes(System.Double)">
            <summary>
            Configure options for X minutes sliding scale expiration
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.ContentTypes">
            <summary>
            Constants class to hold the various 'Content-Type' headers which indicate the media type
            of the resource.
            See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.CSS">
            <summary>
            Cascading Style Sheets (CSS)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.HTML">
            <summary>
            HyperText Markup Language (HTML)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.JAVASCRIPT">
            <summary>
            JavaScript
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.JSON">
            <summary>
            JavaScript Object Notation (JSON)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.PDF">
            <summary>
            Adobe Portable Document Format (PDF)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ContentTypes.XML">
            <summary>
            Extensible Markup Language (XML)
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.CoreConfiguration">
            <summary>
            Identifiers used for IConfigurationRoot configured sections and values
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.CoreConfiguration.SEEDS">
            <summary>
            General data seeding section
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.EnvironmentConstants">
            <summary>
            Common environment related values
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.EnvironmentConstants.TESTING">
            <summary>
            Testing environment identifier
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.ErrorConstants">
            <summary>
            Constants class to hold generic error keys and messages.
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.ErrorConstants.ERROR_RESOURCE_NOT_FOUND_KEY">
            <summary>
            Error key for when a resource/object cannot be located (soft-deleted, does not exist, etc.)
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.HttpHeaders">
            <summary>
            Common HTTP headers
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.HttpHeaders.X_FORWARDED_FOR">
            <summary>
            Originating IP Address
            https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.Queue">
            <summary>
            Constants class to hold identifiers for a queue concept
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Queue.ALL">
            <summary>
            Easy to access array of all queues in priority order from highest to lowest
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Queue.DEFAULT">
            <summary>
            The default queue, general purpose that should happen relatively soon. Say a few minutes, but the world won't end
            if it happens to be delayed.
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes">
            <summary>
            RFC-4646 Language Codes
            See https://docs.microsoft.com/en-us/previous-versions/commerce-server/ee825488(v=cs.20)?redirectedfrom=MSDN
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AF_ZA">
            <summary>
            Afrikaans - South Africa
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_AE">
            <summary>
            Arabic - United Arab Emirates
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_BH">
            <summary>
            Arabic - Bahrain
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_DZ">
            <summary>
            Arabic - Algeria
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_EG">
            <summary>
            Arabic - Egypt
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_IQ">
            <summary>
            Arabic - Iraq
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_JO">
            <summary>
            Arabic - Jordan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_KW">
            <summary>
            Arabic - Kuwait
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_LB">
            <summary>
            Arabic - Lebanon
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_LY">
            <summary>
            Arabic - Libya
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_MA">
            <summary>
            Arabic - Morocco
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_OM">
            <summary>
            Arabic - Oman
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_QA">
            <summary>
            Arabic - Qatar
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_SA">
            <summary>
            Arabic - Saudi Arabia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_SY">
            <summary>
            Arabic - Syria
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_TN">
            <summary>
            Arabic - Tunisia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.AR_YE">
            <summary>
            Arabic - Yemen
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.BE_BY">
            <summary>
            Belarusian - Belarus
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.BG_BG">
            <summary>
            Bulgarian - Bulgaria
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.CA_ES">
            <summary>
            Catalan - Catalan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.CS_CZ">
            <summary>
            Czech - Czech Republic
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.CY_AZ_AZ">
            <summary>
            Azeri (Cyrillic) - Azerbaijan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.CY_SR_SP">
            <summary>
            Serbian (Cyrillic) - Serbia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.CY_UZ_UZ">
            <summary>
            Uzbek (Cyrillic) - Uzbekistan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DA_DK">
            <summary>
            Danish - Denmark
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DE_AT">
            <summary>
            German - Austria
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DE_CH">
            <summary>
            German - Switzerland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DE_DE">
            <summary>
            German - Germany
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DE_LI">
            <summary>
            German - Liechtenstein
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DE_LU">
            <summary>
            German - Luxembourg
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.DIV_MV">
            <summary>
            Dhivehi - Maldives
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EL_GR">
            <summary>
            Greek - Greece
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_AU">
            <summary>
            English - Australia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_BZ">
            <summary>
            English - Belize
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_CA">
            <summary>
            English - Canada
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_CB">
            <summary>
            English - Caribbean
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_GB">
            <summary>
            English - United Kingdom
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_IE">
            <summary>
            English - Ireland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_JM">
            <summary>
            English - Jamaica
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_NZ">
            <summary>
            English - New Zealand
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_PH">
            <summary>
            English - Philippines
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_TT">
            <summary>
            English - Trinidad and Tobago
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_US">
            <summary>
            English - United States
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_ZA">
            <summary>
            English - South Africa
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EN_ZW">
            <summary>
            English - Zimbabwe
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_AR">
            <summary>
            Spanish - Argentina
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_BO">
            <summary>
            Spanish - Bolivia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_CL">
            <summary>
            Spanish - Chile
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_CO">
            <summary>
            Spanish - Colombia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_CR">
            <summary>
            Spanish - Costa Rica
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_DO">
            <summary>
            Spanish - Dominican Republic
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_EC">
            <summary>
            Spanish - Ecuador
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_ES">
            <summary>
            Spanish - Spain
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_GT">
            <summary>
            Spanish - Guatemala
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_HN">
            <summary>
            Spanish - Honduras
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_MX">
            <summary>
            Spanish - Mexico
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_NI">
            <summary>
            Spanish - Nicaragua
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_PA">
            <summary>
            Spanish - Panama
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_PE">
            <summary>
            Spanish - Peru
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_PR">
            <summary>
            Spanish - Puerto Rico
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_PY">
            <summary>
            Spanish - Paraguay
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_SV">
            <summary>
            Spanish - El Salvador
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_UY">
            <summary>
            Spanish - Uruguay
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ES_VE">
            <summary>
            Spanish - Venezuela
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ET_EE">
            <summary>
            Estonian - Estonia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.EU_ES">
            <summary>
            Basque - Basque
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FA_IR">
            <summary>
            Farsi - Iran
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FI_FI">
            <summary>
            Finnish - Finland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FO_FO">
            <summary>
            Faroese - Faroe Islands
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_BE">
            <summary>
            French - Belgium
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_CA">
            <summary>
            French - Canada
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_CH">
            <summary>
            French - Switzerland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_FR">
            <summary>
            French - France
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_LU">
            <summary>
            French - Luxembourg
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.FR_MC">
            <summary>
            French - Monaco
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.GL_ES">
            <summary>
            Galician - Galician
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.GU_IN">
            <summary>
            Gujarati - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.HE_IL">
            <summary>
            Hebrew - Israel
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.HI_IN">
            <summary>
            Hindi - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.HR_HR">
            <summary>
            Croatian - Croatia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.HU_HU">
            <summary>
            Hungarian - Hungary
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.HY_AM">
            <summary>
            Armenian - Armenia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ID_ID">
            <summary>
            Indonesian - Indonesia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.IS_IS">
            <summary>
            Icelandic - Iceland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.IT_CH">
            <summary>
            Italian - Switzerland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.IT_IT">
            <summary>
            Italian - Italy
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.JA_JP">
            <summary>
            Japanese - Japan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KA_GE">
            <summary>
            Georgian - Georgia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KK_KZ">
            <summary>
            Kazakh - Kazakhstan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KN_IN">
            <summary>
            Kannada - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KO_KR">
            <summary>
            Korean - Korea
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KOK_IN">
            <summary>
            Konkani - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.KY_KZ">
            <summary>
            Kyrgyz - Kazakhstan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.LT_AZ_AZ">
            <summary>
            Azeri (Latin) - Azerbaijan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.LT_LT">
            <summary>
            Lithuanian - Lithuania
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.LT_SR_SP">
            <summary>
            Serbian (Latin) - Serbia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.LT_UZ_UZ">
            <summary>
            Uzbek (Latin) - Uzbekistan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.LV_LV">
            <summary>
            Latvian - Latvia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.MK_MK">
            <summary>
            Macedonian (FYROM)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.MN_MN">
            <summary>
            Mongolian - Mongolia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.MR_IN">
            <summary>
            Marathi - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.MS_BN">
            <summary>
            Malay - Brunei
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.MS_MY">
            <summary>
            Malay - Malaysia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.NB_NO">
            <summary>
            Norwegian (Bokmål) - Norway
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.NL_BE">
            <summary>
            Dutch - Belgium
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.NL_NL">
            <summary>
            Dutch - The Netherlands
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.NN_NO">
            <summary>
            Norwegian (Nynorsk) - Norway
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.PA_IN">
            <summary>
            Punjabi - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.PL_PL">
            <summary>
            Polish - Poland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.PT_BR">
            <summary>
            Portuguese - Brazil
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.PT_PT">
            <summary>
            Portuguese - Portugal
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.RO_RO">
            <summary>
            Romanian - Romania
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.RU_RU">
            <summary>
            Russian - Russia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SA_IN">
            <summary>
            Sanskrit - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SK_SK">
            <summary>
            Slovak - Slovakia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SL_SI">
            <summary>
            Slovenian - Slovenia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SQ_AL">
            <summary>
            Albanian - Albania
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SV_FI">
            <summary>
            Swedish - Finland
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SV_SE">
            <summary>
            Swedish - Sweden
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SW_KE">
            <summary>
            Swahili - Kenya
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.SYR_SY">
            <summary>
            Syriac - Syria
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.TA_IN">
            <summary>
            Tamil - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.TE_IN">
            <summary>
            Telugu - India
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.TH_TH">
            <summary>
            Thai - Thailand
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.TR_TR">
            <summary>
            Turkish - Turkey
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.TT_RU">
            <summary>
            Tatar - Russia
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.UK_UA">
            <summary>
            Ukrainian - Ukraine
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.UR_PK">
            <summary>
            Urdu - Pakistan
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.VI_VN">
            <summary>
            Vietnamese - Vietnam
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_CHS">
            <summary>
            Chinese (Simplified)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_CHT">
            <summary>
            Chinese (Traditional)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_CN">
            <summary>
            Chinese - China
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_HK">
            <summary>
            Chinese - Hong Kong SAR
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_MO">
            <summary>
            Chinese - Macau SAR
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_SG">
            <summary>
            Chinese - Singapore
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.Rfc4646LanguageCodes.ZH_TW">
            <summary>
            Chinese - Taiwan
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.UserMetadataNames">
            <summary>
            UserMetadata name values used by Core actors
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.UserMetadataNames.FACEBOOK">
            <summary>
            Used to identify a facebook related value item (ie. OAuth type)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.UserMetadataNames.GOOGLE">
            <summary>
            Used to identify a google related value item (ie. OAuth type)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.UserMetadataNames.MICROSOFT">
            <summary>
            Used to identify a microsoft related value item (ie. OAuth type)
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.UserMetadataNames.TWITTER">
            <summary>
            Used to identify a twitter related value item (ie. OAuth type)
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Constants.UserMetadataTypes">
            <summary>
            Commonly used UserMetadata types
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Constants.UserMetadataTypes.ExternalUserId">
            <summary>
            Unique external authentication identifier (ie. oauth, client specific auth)
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Cultures.EnglishUnitedStates">
            <summary>
            Localization Culture for United States English (en-US)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Cultures.EnglishUnitedStates.Code">
            <inheritdoc/>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Cultures.EnglishUnitedStates.IsDefault">
            <inheritdoc/>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Cultures.SpanishSpain">
            <summary>
            Localization Culture for Spanish - Spain (es-US)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Cultures.SpanishSpain.Code">
            <inheritdoc/>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Do`1">
            <summary>
            TODO: Backfill tests https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/15
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Do`1.Finally(Microsoft.Extensions.Logging.ILogger,System.Action{AndcultureCode.CSharp.Core.Interfaces.IResult{`0}})">
            <summary>
            Extension of 'Finally' that will automatically log any thrown exceptions
            </summary>
            <param name="logger">Logger to use when an unhandled exception is caught</param>
            <param name="workload"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Do`1.Then(System.Func{AndcultureCode.CSharp.Core.Interfaces.IResult{`0},`0},System.Boolean)">
            <summary>
            Chainable method to perform additional pieces of work beyond an initial try
            </summary>
            <param name="workload">Single unit of work to attempt</param>
            <param name="skipIfErrors">Provided work will be ignored if errors exist</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Do`1.Try(Microsoft.Extensions.Logging.ILogger,System.Func{AndcultureCode.CSharp.Core.Interfaces.IResult{`0},`0})">
            <summary>
            Extension of 'Try' that will automatically log any thrown exceptions
            </summary>
            <param name="logger">Logger to use when an unhandled exception is caught</param>
            <param name="workload"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Do`1.Try(Microsoft.Extensions.Logging.ILogger,System.UInt32,System.Func{AndcultureCode.CSharp.Core.Interfaces.IResult{`0},`0})">
            <summary>
            Tries to run the given workload the indicated number of times
            </summary>
            <param name="logger">Logger used to log errors with</param>
            <param name="workload">Workload to be performed</param>
            <param name="retry">Number of retries that should be performed. If value is
                                zero, will not retry</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Do`1.TrySeed``1(AndcultureCode.CSharp.Core.SeedsBase{``0},System.Func{AndcultureCode.CSharp.Core.Interfaces.IResult{`0},`0},System.String)">
            <summary>
            Extension of 'Try' that will automatically log before, during and after seeding logic
            </summary>
            <param name="seeds">Logger to use when an unhandled exception is caught</param>
            <param name="workload"></param>
            <param name="seedName">Manually supply name of seed. By default, the invoking function name is used.</param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Enumerations.HttpVerb">
             <summary>
             Enumeration of HttpVerbs
            
             TODO: Consider using Microsoft.AspNet.Mvc.HttpVerbs enum
             </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Enumerations.JobStatus">
            <summary>
            Statuses for a given job
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Enumerations.LogicalOperator">
            <summary>
            Simple Bitwise enumeration
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Enumerations.Recurrence">
            <summary>
            Different types of job recurrence
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IAndcultureCodeWebHostBuilderExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Extensions.IAndcultureCodeWebHostBuilderExtensions.ASPNETCORE_ENVIRONMENT">
            <summary>
            Literal string representation of the Core Environment
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IAndcultureCodeWebHostBuilderExtensions.PreloadAmazonElasticBeanstalk(AndcultureCode.CSharp.Core.Interfaces.Hosting.IAndcultureCodeWebHostBuilder,System.Boolean,AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider)">
            <summary>
            Configures resources from Amazon Elastic Beanstalk (EB) before AspNetCore
            is started up. Namely, reading of ASPNET environment
            </summary>
            <param name="builder"></param>
            <param name="stdoutEnabled">Should errors be output to standard output for debugging being this could be run before logging starts</param>
            <param name="configurationProvider"> TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IConfigurationBuilderExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IConfigurationBuilderExtensions.AddAmazonElasticBeanstalk(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Configures dotnet IConfigurationBuilder to read Amazon Elastic Beanstalk instance environment variables
            </summary>
            <param name="configurationBuilder"></param>
            <returns></returns>
            <example>
            <code>
            new ConfigurationBuilder()
                .AddJsonFile("appsettings.json")
                .AddAmazonElasticBeanstalk()
                .AddEnvironmentVariables();
            </code>
            </example>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.Default(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.ICulture})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="cultures"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.Exists(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.ICulture},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="cultures"></param>
            <param name="cultureCode"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.ToCultureCodes(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.ICulture})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="cultures"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.ToCultureCodes(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.ICulture},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="cultures"></param>
            <param name="delimiter"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.ToCultureInfo(AndcultureCode.CSharp.Core.Interfaces.ICulture)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ICultureExtensions.ToCultureInfos(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.ICulture})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="cultures"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IDistributedCacheExtensions">
            <summary>
            Extensions of IDistributedCache
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IDistributedCacheExtensions.Get``1(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String)">
            <summary>
            Retrieve cached value as a desired type.
            </summary>
            <param name="cache"></param>
            <param name="key"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IDistributedCacheExtensions.Serialize``1(Microsoft.Extensions.Caching.Distributed.IDistributedCache,``0)">
            <summary>
            Serialize data to be cached
            </summary>
            <param name="cache"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IDistributedCacheExtensions.Set``1(Microsoft.Extensions.Caching.Distributed.IDistributedCache,System.String,``0,Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions)">
            <summary>
            Serialize and cache supplied key/value pair
            </summary>
            <param name="cache"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IResultExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])">
            <summary>
            Add translated error record of type Error
            </summary>
            <param name="result"></param>
            <param name="localizer"></param>
            <param name="key">Error key found in culture files</param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Interfaces.IError)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Enumerations.ErrorType,System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="errorType"></param>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Localization.IStringLocalizer,AndcultureCode.CSharp.Core.Enumerations.ErrorType,System.String,System.Object[])">
            <summary>
            Add translated error record
            </summary>
            <param name="result"></param>
            <param name="localizer"></param>
            <param name="key">Error key found in culture files</param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String)">
            <summary>
            Adds a new error with the calling class and method name as the key
            </summary>
            <param name="result"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddExceptionError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String,System.Exception)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddValidationError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddValidationError``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])">
            <summary>
            Add translated error record of type Validation
            </summary>
            <param name="result"></param>
            <param name="localizer"></param>
            <param name="key">Error key found in culture files</param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrors``2(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Interfaces.IResult{``1})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TSource"></typeparam>
            <param name="destination"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorsAndReturnDefault``2(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Interfaces.IResult{``1})">
            <summary>
            Convenience method to simplify common scenario of bubbling errors and
            returning null (or default for T type) to the parent
            </summary>
            <param name="destination"></param>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Nullable{System.Int64})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="errorKey"></param>
            <param name="errorMessage"></param>
            <param name="resourceIdentifier"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorsAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Int64,System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="errorKey"></param>
            <param name="errorMessage"></param>
            <param name="resourceIdentifier"></param>
            <param name="errors"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorsAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="errorKey"></param>
            <param name="errorMessage"></param>
            <param name="errors"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorsAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError},System.String)">
            <summary>
            Add error record and log message
            </summary>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="errorKey">Error key found in culture files</param>
            <param name="errorMessage">Translated error message</param>
            <param name="logMessage">Log message - commonly un-translated version of errorMessage</param>
            <param name="resourceIdentifier"></param>
            <param name="errors">Additional errors to forward. These are assumed to have already been translated.</param>
            <param name="methodName">Name of calling method for use in log message for improved debugging</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])">
            <summary>
            Add translated error record and log un-translated message
            </summary>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="localizer"></param>
            <param name="errorKey">Error key found in culture files</param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Int64,System.Object[])">
            <summary>
            Add translated error record and log un-translated message
            </summary>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="localizer"></param>
            <param name="errorKey">Error key found in culture files</param>
            <param name="resourceIdentifier"></param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddErrorsAndLog``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Int64,System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError},System.Object[])">
            <summary>
            Add translated error record and log un-translated message
            </summary>
            <param name="result"></param>
            <param name="logger"></param>
            <param name="localizer"></param>
            <param name="errorKey">Error key found in culture files</param>
            <param name="resourceIdentifier"></param>
            <param name="errors">Additional errors to forward. These are assumed to have already been translated.</param>
            <param name="arguments">The values with which to format the translated error message</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddNextLinkParam``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String,System.String)">
            <summary>
            Adds a new key value pair to the NextLinkParams. Essentially saves needing to
            null check and externally manage NextLinkParams property directly.
            </summary>
            <param name="result"></param>
            <param name="key">Unique key to add for next link params</param>
            <param name="value">Value for supplied key. Can be null</param>
            <typeparam name="T"></typeparam>
            <returns>Reference to NextLinkParams</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddNextLinkParam``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String,System.Int32)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.AddNextLinkParams``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Interfaces.IResult{``0})">
             <summary>
             Adds NextLinkParams key value pairs from a source IResult to a destination IResult.
            
             The destination result's NextLinkParams dictionary reference will remain unchanged.
             </summary>
             <param name="destinationResult">IResult destination to which next link params are copied</param>
             <param name="sourceResult">IResult source from which to copy next link params</param>
             <typeparam name="T"></typeparam>
             <returns>Reference to NextLinkParams</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.DoesNotHaveErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Enumerations.ErrorType)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="errorType"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.DoesNotHaveErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.GetErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Enumerations.ErrorType)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="errorType"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.GetErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.GetValidationErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrors``1(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IResult{``0}},AndcultureCode.CSharp.Core.Enumerations.ErrorType)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="resultList"></param>
            <param name="errorType"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrors``1(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IResult{``0}},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="resultList"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrors``1(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IResult{``0}})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="resultList"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},AndcultureCode.CSharp.Core.Enumerations.ErrorType)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="errorType"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrorsOrResultIsFalse(AndcultureCode.CSharp.Core.Interfaces.IResult{System.Boolean})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasErrorsOrResultIsNull``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.HasValidationErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.ListErrors``1(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IResult{``0}},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="resultList"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.ListErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.ThrowIfAnyErrors``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.Exception)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="customException"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.ThrowIfAnyErrorsOrResultIsNull``1(AndcultureCode.CSharp.Core.Interfaces.IResult{``0},System.Exception,System.Exception)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <param name="hasErrorsException"></param>
            <param name="resultNullException"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IResultExtensions.ThrowIfAnyErrorsOrResultIsFalse(AndcultureCode.CSharp.Core.Interfaces.IResult{System.Boolean},System.Exception,System.Exception)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="result"></param>
            <param name="hasErrorsException"></param>
            <param name="resultNullException"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IServiceCollectionExtensions">
            <summary>
            Convenience extensions for registering/configuring core actors
            /// </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IServiceCollectionExtensions.AddSeeding(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            Configure application to support data seeding
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.IStringLocalizerExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.IStringLocalizerExtensions.Default(Microsoft.Extensions.Localization.IStringLocalizer,System.String,System.Object[])">
            <summary>
            Retrieve given translation for default configured culture
            </summary>
            <param name="localizer"></param>
            <param name="key"></param>
            <param name="arguments">The values with which to format the translated error message</param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.ObjectExtensions">
            <summary>
            TODO: Extract to AndcultureCode.CSharp.Extensions project
            https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/64
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ObjectExtensions.FromByteArray``1(System.Byte[])">
            <summary>
            Converts supplied byte array to requested type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ObjectExtensions.ToByteArray(System.Object)">
            <summary>
            Converts supplied data to byte array
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.ResourceVerbExtensions">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ResourceVerbExtensions.ToResourceVerb(System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="resourceVerbString"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.ResourceVerbExtensions.ToResourceVerbs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/37
            </summary>
            <param name="resourceVerbStrings"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Extensions.StringExtensions">
            <summary>
            String extension methods
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Extensions.StringExtensions.LoadTranslations(System.String,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Loads a given translation .json file and maps contents to CultureTranslation objects
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser">
            <summary>
            Base information used to integration OAuth provider users
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser.Email">
            <summary>
            Email address
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser.FirstName">
            <summary>
            Given name / First name
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser.Id">
            <summary>
            Uniquely assigned identifier from external oauth provider
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser.LastName">
            <summary>
            Surname / Lastname
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Authentication.IOAuthUser.UserMetadataName">
            <summary>
            Which UserMetadata.Name is associated for this OAuth User type
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.ILockingConductor`1.ExtendLock(System.Int64,System.DateTimeOffset,System.Nullable{System.Int64})">
            <summary>
            Updates the LockedUntil field for the record, allowing the user that locked
            it to have the lock for a longer amount of time.
            </summary>
            <param name="id">The record id</param>
            <param name="lockUntil">The time the record should be locked until</param>
            <param name="updatedById">The id of the user updating the record's lock time</param>
            <returns>the updated record if the lock is successfully extended, null otherwise</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.ILockingConductor`1.Lock(System.Int64,System.DateTimeOffset,System.Nullable{System.Int64})">
            <summary>
            Updates the locking fields to be set, which denotes that the user locking the record should
            have exclusive access to modifying it for the lock's duration. This, however, does
            not prohibit the record from being modified by others. When a record is locked, the
            ValidateLock method below should be used to determine if the record can be modified. This will
            ensure that only the user that locked the record is actually able to modify its contents.
            </summary>
            <param name="id">The record id</param>
            <param name="lockUntil">The time the record should be locked until</param>
            <param name="lockedById">The id of the user locking the record</param>
            <returns>the updated record if it is successfully locked, null otherwise</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.ILockingConductor`1.Unlock(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Updates the locking fields back to null, meaning any user will be able to acquire a lock
            so they have exclusive access to editing it.
            </summary>
            <param name="id">The record id</param>
            <param name="unlockedById">The id of the user unlocking the record</param>
            <returns>the updated record if it is successfully unlocked, null otherwise</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.ILockingConductor`1.ValidateLock(`0,System.Nullable{System.Int64})">
            <summary>
            Used to determine whether or not the user attempting to update the record is the
            user that has the lock, AND that the lock is still valid (i.e. not expired).
            </summary>
            <param name="item">The item</param>
            <param name="currentUserId">The current user id</param>
            <returns>true if the lock is still active and is locked by the current user, false otherwise</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Conductors.IPermissionConductor">
            <summary>
            Determines permission leveraging access control lists
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IPermissionConductor.GetAcls(System.String,System.String)">
            <summary>
            Get a list of Access Rules for a given resource/verb pair.
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IPermissionConductor.IsAllowed(System.String,System.String,System.String)">
            <summary>
            Determine if a given Role is allowed to perform a certain action, given as a
            resource/verb pair.
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
            <param name="subject">The ID for the Role that we're checking permissions for.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IPermissionConductor.IsAllowed(AndcultureCode.CSharp.Core.Enumerations.LogicalOperator,System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Models.Security.ResourceVerb},System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IPermissionConductor.IsAllowed(AndcultureCode.CSharp.Core.Enumerations.LogicalOperator,System.String,System.String)" -->
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryConductor`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryConductor`1.BulkCreateOrUpdate(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Automatically determines if the supplied entity needs created or updated.
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryConductor`1.CreateOrUpdate(`0,System.Nullable{System.Int64})">
            <summary>
            Automatically determines if the supplied entity needs created or updated.
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryConductor`1.CreateOrUpdate(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Automatically determines if the supplied entities need created or updated.
            </summary>
            <param name="items"></param>
            <param name="createdOrUpdatedById"></param>
            <returns></returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryCreateConductor`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryCreateConductor`1.BulkCreateDistinct``1(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``0},System.Nullable{System.Int64})">
            <summary>
            Calls BulkCreate() with a de-duped list of objects as determined by the
            property (or properties) of the object for the 'property' argument
            NOTE: Bulking is generally faster than batching, but locks the table.
            </summary>
            <param name="items">List of items to attempt to create</param>
            <param name="property">Property or properties of the typed object to determine distinctness</param>
            <param name="createdById">Id of the user creating the entity</param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryCreateConductor`1.CreateDistinct``1(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``0},System.Nullable{System.Int64})">
            <summary>
            Calls batched overload of Create() with a de-duped list of objects as determined by the
            property (or properties) of the object for the 'property' argument.
            NOTE: Batching is generally slower than bulking, but does not lock the table.
            </summary>
            <param name="items">List of items to attempt to create</param>
            <param name="property">Property or properties of the typed object to determine distinctness</param>
            <param name="createdById">Id of the user creating the entity</param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryDeleteConductor`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Configure lazy loaded queryable, given provided parameters, to load a list of <typeparamref name="T"/>
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Configure lazy loaded queryable, given provided parameters, to load a list of <typeparamref name="T"/> grouped by a <typeparamref name="TKey"/>
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="groupBy">Filter to be used for grouping by <typeparamref name="TKey"/> of <typeparamref name="T"/> .</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAll``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{`0},``1}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Configure lazy loaded queryable, given provided parameters, to load a list of <typeparamref name="T"/>
            grouped by a <typeparamref name="TKey"/> and selected by groupBySelector tranformed into <typeparamref name="TResult"/>
            ref to microsoft docs: https://shorturl.at/jptP3
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="groupBy">Filter to be used for grouping by <typeparamref name="TKey"/> of <typeparamref name="T"/> .</param>
            <param name="groupBySelector">Selector to be used on groupBy used to create a result of <typeparamref name="TResult"/> value from each group.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAll(System.Collections.Generic.Dictionary{System.String,System.String},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Alternative FindAll for retrieving records using NextLinkParams in place of traditional
            determinate pagination mechanisms, such as; skip and take.
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="nextLinkParams"></param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAllCommitted(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Similar to FindAll, this evaluates the parameters as given. The big difference here is that the query is executed
            inside the conductor and a List<typeparamref name="T"/> is returned and NOT Queryable<typeparamref name="T"/>.  This is primary used in cases where calculated
            fields need to be executed (committed) inside the conductor.
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindAllCommitted(System.Collections.Generic.Dictionary{System.String,System.String},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Boolean})">
            <summary>
            Alternative FindAll for retrieving records using NextLinkParams in place of traditional
            determinate pagination mechanisms, such as; skip and take.
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="nextLinkParams"></param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindById(System.Int64)">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindById(System.Int64,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds an entity by its Id that also matches a filter.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="filter">Filter to be used for querying.</param>
            <returns>The entity witht he provided identity value and filter condition met.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindById(System.Int64,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindById(System.Int64,System.Boolean,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryReadConductor`1.FindById(System.Int64,System.String[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Conductors.IRepositoryUpdateConductor`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Data.IApplicationContext">
            <summary>
            Base application context containing commonly leveraged system-level entities
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IApplicationContext.Acls">
            <summary>
            Access control lists
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection">
            <summary>
            Describes standard database connection
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.AdditionalParameters">
            <summary>
            Additional custom configuration parameters
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.Database">
            <summary>
            Name of database
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.Datasource">
            <summary>
            Url/Name for server
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.Password">
            <summary>
            Hopefully a secure password
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.UserId">
            <summary>
            User identifier
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IConnection.ToString(System.String)">
            <summary>
            Single flattened string representation for the connection
            </summary>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.CommandTimeout">
            <summary>
            Ability to set and get the underlying DbContext's command timeout
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.BulkCreate(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Perform a DbContext.BulkInsert on an enumeration of T within a single transaction
            </summary>
            <param name="items"></param>
            <param name="createdById"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.BulkCreateDistinct``1(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``0},System.Nullable{System.Int64})">
            <summary>
            Calls BulkCreate() with a de-duped list of objects as determined by the
            property (or properties) of the object for the 'property' argument
            NOTE: Bulking is generally faster than batching, but locks the table.
            </summary>
            <param name="items">List of items to attempt to create</param>
            <param name="property">Property or properties of the typed object to determine distinctness</param>
            <param name="createdById">Id of the user creating the entity</param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
            <summary>
            Calls BulkCreate() after selecting a subset of 'items' based on the distinct value of 'property'
            </summary>
            <param name="items"></param>
            <param name="property"></param>
            <param name="createdById"></param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.BulkDelete(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Calls BulkDelete() with a de-duped list of objects as determined by the
            property (or properties) of the object for the 'property' argument
            NOTE: Bulking is generally faster than batching, but locks the table.
            </summary>
            <param name="items"></param>
            <param name="deletedById"></param>
            <param name="soft"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.BulkUpdate(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Ability to update a list of entities in a single bulk operation.
            </summary>
            <param name="entities">List of items to update</param>
            <param name="updatedBy">Id of user updating the entity</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Create(`0,System.Nullable{System.Int64})">
            <summary>
            Ability to create an entity 
            </summary>
            <param name="item">Item to be created</param>
            <param name="createdById">Id of user creating the item</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Create(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Ability to create entities individually using a list 
            </summary>
            <param name="items">List of items to be created</param>
            <param name="createdById">Id of user creating the items</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.CreateDistinct``1(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``0},System.Nullable{System.Int64})">
            <summary>
            Calls batched overload of Create() with a de-duped list of objects as determined by the
            property (or properties) of the object for the 'property' argument.
            NOTE: Batching is generally slower than bulking, but does not lock the table.
            </summary>
            <param name="items">List of items to attempt to create</param>
            <param name="property">Property or properties of the typed object to determine distinctness</param>
            <param name="createdById">Id of the user creating the entity</param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Delete(System.Int64,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Ability to delete an entity using an Id
            </summary>
            <param name="id">Id of item to be deleted</param>
            <param name="deletedById">Id of user deleting the item</param>
            <param name="soft">Boolean flag for soft-deleting the item</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Delete(`0,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Ability to delete an entity using the entity itself
            </summary>
            <param name="o">Item to be deleted</param>
            <param name="deletedById">Id of user deleting the item</param>
            <param name="soft">Boolean flag for soft-deleting the item</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Delete(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64},System.Int64,System.Boolean)">
            <summary>
            Ability to delete a list of entities by batch size.
            </summary>
            <param name="items">List of items to delete</param>
            <param name="deletedById">Id of user deleting the items</param>
            <param name="batchSize">Number of items to include in a batch, defaults to 100</param>
            <param name="soft">Boolean flag for soft-deleting the items</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Find all filtered, sorted and paged
            </summary>
            <param name="filter"></param>
            <param name="orderBy"></param>
            <param name="includeProperties"></param>
            <param name="skip"></param>
            <param name="take"></param>
            <param name="ignoreQueryFilters"></param>
            <param name="asNoTracking"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Configure lazy loaded queryable, given provided parameters, to load a list of <typeparamref name="T"/> grouped by a <typeparamref name="TKey"/>
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="groupBy">Filter to be used for grouping by <typeparamref name="TKey"/> of <typeparamref name="T"/> .</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindAll``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{`0},``1}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Configure lazy loaded queryable, given provided parameters, to load a list of <typeparamref name="T"/>
            grouped by a <typeparamref name="TKey"/> and selected by groupBySelector tranformed into <typeparamref name="TResult"/>
            ref to: https://docs.microsoft.com/en-us/dotnet/api/system.linq.queryable.groupby?view=netcore-3.1#System_Linq_Queryable_GroupBy__3_System_Linq_IQueryable___0__System_Linq_Expressions_Expression_System_Func___0___1___System_Linq_Expressions_Expression_System_Func___1_System_Collections_Generic_IEnumerable___0____2___
            </summary>
            <param name="filter">Filter to be used for querying.</param>
            <param name="orderBy">Properties that should be used for sorting.</param>
            <param name="groupBy">Filter to be used for grouping by <typeparamref name="TKey"/> of <typeparamref name="T"/> .</param>
            <param name="groupBySelector">Selector to be used on groupBy used to create a result of <typeparamref name="TResult"/> value from each group.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <param name="skip">Number of entities that should be skipped.</param>
            <param name="take">Number of entities per page.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="asNoTracking">Ignore change tracking on the result. Set <code>true</code> for read-only operations.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindAllCommitted(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})" -->
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindById(System.Int64,System.Nullable{System.Boolean})">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindById(System.Int64,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds an entity by its Id that also matches a filter.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="filter">Filter to be used for querying.</param>
            <returns>The entity witht he provided identity value and filter condition met.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindById(System.Int64,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindById(System.Int64,System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="ignoreQueryFilters">If true, global query filters will be ignored for this query.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.FindById(System.Int64,System.String[])">
            <summary>
            Finds an entity by its Id.
            </summary>
            <param name="id">The entity identity value.</param>
            <param name="includeProperties">Navigation properties that should be included.</param>
            <returns>The entity with the provided identity value.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Restore(`0)">
            <summary>
            Ability to restore a soft-deleted entity using the entity itself. 
            </summary>
            <param name="o">Entity to be restored</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Restore(System.Int64)">
            <summary>
            Ability to restore a soft-deleted entity using the entity id.
            </summary>
            <param name="id">Id of entity to be restored</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Update(`0,System.Nullable{System.Int64})">
            <summary>
            Ability to create or update an entity
            </summary>
            <param name="item">Item to create or update</param>
            <param name="updatedBy">Id of user creating or updating the entity</param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Data.IRepository`1.Update(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int64})">
            <summary>
            Calls Update one-by-one for each item in the enumerated entities.
            For large operations, BulkUpdate() is more efficient.
            </summary>
            <param name="entities"></param>
            <param name="updatedBy"></param>
            <returns>True if entities updated without any exceptions. False if an exception was thrown.</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Entity.IRole">
            <summary>
            Unique reponsibility (typically of a user) in the system
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IRole.Description">
            <summary>
            Brief description around the purpose of this role in the system
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IRole.Name">
            <summary>
            Human readable name for this role in the system
            /// </summary>
            <value></value>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser">
            <summary>
            Descriptor of an individual in the system
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.Email">
            <summary>
            Email address
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.IsSuperAdmin">
            <summary>
            Highest level user permission.
            Has access to all capabilities in the system.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.PasswordHash">
            <summary>
            Encrypted base64 password
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.Salt">
            <summary>
            Base64 salt
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.SecurityStamp">
            <summary>
            Idenitifer used to compare changes to this "identity".
            Can take on many forms depending upon the application (ie. datetime, guid)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUser.UserName">
            <summary>
            Alias/handle in the system
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin">
            <summary>
            Captures a given user's attempts at both
            successfully and unsuccessfully log into the system.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.FailedAttemptCount">
            <summary>
            Number of consecutive failed attempts at logging in
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.Ip">
            <summary>
            IP address of requests to authenticate this user
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.IsSuccessful">
            <summary>
            Is this a successful login request?
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.RoleId">
            <summary>
            Unique identifier of associated IRole
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.ServerName">
            <summary>
            Identifier (hopefully unique) of server handling the request
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.UserAgent">
            <summary>
            Requesting party's user-agent
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.UserId">
            <summary>
            Unique identifier of associated IUser
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.UserName">
            <summary>
            Handle/Alias used to login (or attempt to login) this user
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.Role">
            <summary>
            Reference to IRole that has Id equal to RoleId
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserLogin.User">
            <summary>
            Reference to IUser that has an Id equal to UserId
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata">
            <summary>
            Describes an individual user/role setting
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.IsNameEditable">
            <summary>
            Can the name of this object be changed? (if not, system likely relies on it)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.Name">
            <summary>
            Name for metadata
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.RoleId">
            <summary>
            Unique identifier of associated IRole
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.Type">
            <summary>
            Type classification for metadata
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.UserId">
            <summary>
            Unique identifier of associated IUser
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.Value">
            <summary>
            User's value for this setting
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.Role">
            <summary>
            Reference to IRole that has Id equal to RoleId
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserMetadata.User">
            <summary>
            Reference to IUser that has an Id equal to UserId
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserRole">
            <summary>
            Associates a role to a user
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserRole.RoleId">
            <summary>
            Unique identifier of associated IRole
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserRole.UserId">
            <summary>
            Unique identifier of associated IUser
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserRole.Role">
            <summary>
            Reference to IRole that has Id equal to RoleId
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Entity.IUserRole.User">
            <summary>
            Reference to IUser that has an Id equal to UserId
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.IResult`1.ErrorCount">
            <summary>
            Number of errors
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.IResult`1.Errors">
            <summary>
            List of errors around a request
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.IResult`1.HasErrors">
            <summary>
            Does this result contain any errors?
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.IResult`1.NextLinkParams">
            <summary>
            List of key value pairs to be used request the very next related Result
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.IResult`1.ResultObject">
            <summary>
            Actual resulting value from the request
            </summary>
            <value></value>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.IResult`1.Match``1(System.Func{`0,``0},System.Func{System.Collections.Generic.List{AndcultureCode.CSharp.Core.Interfaces.IError},``0})">
            <summary>
            Match on any case of <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IResult`1"/>.
            </summary>
            <typeparam name="TResult">The type to return from all cases of the <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IResult`1"/> to.</typeparam>
            <param name="success">What to do if the <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IResult`1"/> was a sucess.</param>
            <param name="failure">What to do if the <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IResult`1"/> was a failure.</param>
            <returns>The result of handling all cases.</returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Hosting.IAndcultureCodeWebHostBuilder.Args">
            <summary>
            The command line args to dotnet process. Ultimately piped to AspNetCore WebHost.
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Hosting.IAndcultureCodeWebHostBuilder.CreateDefaultBuilder">
            <summary>
            Simple wrapper around AspNetCore WebHost.CreateDefaultBuilder
            to support our own extensibility model
            </summary>
            <returns></returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.ICulture.Code">
            <summary>
            RFC-4646 5-character Culture code (xx-XX)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.ICulture.IsDefault">
            <summary>
            Is this the default locale in the application? There can only be one
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Providers.Mail.IEmailProvider">
            <summary>
            Generic email provider
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Mail.IEmailProvider.Send(MimeKit.MimeMessage)">
            <summary>
            Send an email immediately
            </summary>
            <param name="message">The message to be sent</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Mail.IEmailProvider.SendLater(MimeKit.MimeMessage)">
            <summary>
            Send an email via a background job
            </summary>
            <param name="message">The message to be sent</param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Providers.IProvider">
            <summary>
            Foundation configuration for providers
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Providers.IProvider.Implemented">
            <summary>
            Specify whether the provider has been implemented
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Providers.IProvider.Name">
            <summary>
            Name of the provider
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider">
            <summary>
            Generic storage container provider
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider.Copy(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Copies a file or folder from a source location on the external storage provider to a
            destination location on the external storage provider.
            </summary>
            <param name="srcRelativeProviderPath">Name of the 'prefix' or relative path under the source bucket to copy data from</param>
            <param name="srcStorageContainer">Name of the source bucket/container from which to pull data from</param>
            <param name="destRelativeProviderPath">Name of the 'prefix' or relative path under the destination bucket to copy data to</param>
            <param name="destStorageContainer">Name of the destination bucket/container from which to copy data to</param>
            <param name="srcPathToCopy">
            (Optional) Name of the individual file underneath the source bucket and relative path.
            If omitted, it is assumed you are copying a folder instead of an individual file.
            </param>
            <param name="destPathToCopy">
            (Optional) Name of the individual file underneath the destination bucket and relative path.
            If omitted, it is assumed you are copying a folder instead of an individual file.
            </param>
            <returns>True if the copy operation succeeded, false otherwise.</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider.Download(System.String,System.String,System.String)">
            <summary>
            Downloads and saves file from external storage to local machine
            </summary>
            <param name="relativeProviderPath">Path to file respective to the parent folder/bucket</param>
            <param name="storageContainer">Parent level folder/bucket</param>
            <param name="pathToSave">Path on local system to save file</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider.FileExists(System.String,System.String)">
            <summary>
            Check existence of a file stored externally
            </summary>
            <param name="relativeProviderPath">Path to file respective to the parent folder/bucket</param>
            <param name="storageContainer">Parent level folder/bucket</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider.GetFile(System.String,System.String)">
            <summary>
            Get's file contents from storage provider
            </summary>
            <param name="relativeProviderPath">Path to file respective to the parent folder/bucket</param>
            <param name="storageContainer">Parent level folder/bucket</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IStorageProvider.GetRemoteAccessDetails(System.String,System.String,System.Nullable{System.DateTimeOffset},AndcultureCode.CSharp.Core.Enumerations.HttpVerb,System.String)">
            <summary>
            Get resource RemoteAccessDetails
            </summary>
            <param name="relativeProviderPath">Path to file respective to the parent folder/bucket</param>
            <param name="storageContainer">Parent level folder/bucket</param>
            <param name="expiryTime">Life span before exipiration</param>
            <param name="httpVerb">The Http verb of requested action</param>
            <param name="contentType">Content-Type of requested resource</param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IRemoteAccessDetails">
            <summary>
            Access details to access a given storage resource
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Interfaces.Providers.Storage.IRemoteAccessDetails.Url">
            <summary>
            Url for accessing the given resource
            </summary>
            <value></value>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider">
            <summary>
            Background job processing provider
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Delete(System.String)">
            <summary>
            Changes the state of an enqueued job to deleted. Will still be counted in the EnqueuedCount
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.DeletedCount">
            <summary>
            Number of jobs in the deleted state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Enqueue(System.Linq.Expressions.Expression{System.Action})">
            <summary>
            Create a new fire and forget worker task
            </summary>
            <param name="methodCall"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Enqueue``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Create a new fire and forget worker task
            </summary>
            <param name="methodCall"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.EnqueuedCount(System.String)">
            <summary>
            Enqueued can still mean deleted. This includes all jobs enqueued regardless of state.
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Recur(System.String,System.Linq.Expressions.Expression{System.Action},AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption)">
            <summary>
            Create a recurring worker task
            </summary>
            <param name="identifier"></param>
            <param name="methodCall"></param>
            <param name="recurringOptions"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Recur``1(System.String,System.Linq.Expressions.Expression{System.Action{``0}},System.String)">
            <summary>
            Create a recurring worker task
            </summary>
            <param name="identifier"></param>
            <param name="methodCall"></param>
            <param name="chronExpression"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Recur``1(System.String,System.Linq.Expressions.Expression{System.Action{``0}},AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption)">
            <summary>
            Create a recurring worker task
            </summary>
            <param name="identifier"></param>
            <param name="methodCall"></param>
            <param name="recurringOptions"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.RecurringCount">
            <summary>
            Number of jobs that have been setup for recurrence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.RemoveRecurrence(System.String)">
            <summary>
            Remove a worker recurrence
            </summary>
            <param name="identifier"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Schedule(System.Linq.Expressions.Expression{System.Action},System.TimeSpan)">
            <summary>
            Schedule a method to be enqueued at a specific time
            </summary>
            <param name="methodCall"></param>
            <param name="delay"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.TimeSpan)">
            <summary>
            Schedule a method to be enqueued at a specific time
            </summary>
            <param name="methodCall"></param>
            <param name="delay"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Schedule(System.Linq.Expressions.Expression{System.Action},System.DateTimeOffset)">
            <summary>
            Schedule a method to be enqueued at a specific time
            </summary>
            <param name="methodCall"></param>
            <param name="enqueueOn"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Interfaces.Providers.Worker.IWorkerProvider.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.DateTimeOffset)">
            <summary>
            Schedule a method to be enqueued at a specific time
            </summary>
            <param name="methodCall"></param>
            <param name="enqueueOn"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Auditable">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.CreatedById">
            <summary>
            The identifier of the user who created the record
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.CreatedOn">
            <summary>
            The date and time of the record creation
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.DeletedById">
            <summary>
            The identifier of the user who performed the Delete
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.DeletedOn">
            <summary>
            The date and time of the record deletion
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.UpdatedById">
            <summary>
            The identifier of the user who performed the Update
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Auditable.UpdatedOn">
            <summary>
            The date and time of the record update
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.#ctor">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Add(`0,`1)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Remove(`0,`1)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.GetEnumerator">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.ContainsKey(`0)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Keys">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.TryGetValue(`0,System.Collections.Generic.ICollection{`1}@)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Item(`0)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.Count">
            <summary>
            Returns a count of items in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Collections.OrderedList`2.IsReadOnly">
            <summary>
            Returns a value indicating if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Collections.ReverseComparer`1">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.ReverseComparer`1.#ctor">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.ReverseComparer`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Collections.ReverseComparer`1.Compare(`0,`0)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Configuration.BasicAuthenticationConfiguration">
            <summary>
            Configuration properties available when setting up Basic HTTP authentication
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Configuration.BasicAuthenticationConfiguration.IsEnabled">
            <summary>
            Is basic auth enabled for this environment?
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Configuration.BasicAuthenticationConfiguration.Password">
            <summary>
            Password for users to use when authenticating
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Configuration.BasicAuthenticationConfiguration.UserName">
            <summary>
            Username for users to use when authenticating
            </summary>
            <value></value>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration">
            <summary>
            Commonly used string lengths for various types of data
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.IP_ADDRESS_LENGTH">
            <summary>
            Maximum storage length for IP address columns.
            IPv4 is 15 characters and IPv6 is 39 characters
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.EXTRA_SHORT_STRING_LENGTH">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.LONG_DESCRIPTION_LENGTH">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.SHORT_DESCRIPTION_LENGTH">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.SHORT_STRING_LENGTH">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.SHORT_TITLE_LENGTH">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Configuration.DataConfiguration.URL_LENGTH">
            <summary>
            IE has a max of 2083
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Connection">
            <summary>
            Breaks out standard connection string params into easy to consume object
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Connection.AdditionalParameters">
            <summary>
            Additional configuration details
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Connection.Database">
            <summary>
            Database name
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Connection.Datasource">
            <summary>
            Data host
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Connection.Password">
            <summary>
            Hopefully a secure password
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Connection.UserId">
            <summary>
            User identifier for the connectiong
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Connection.ToString(System.String)">
            <summary>
            Return the data to the form from which it came, a semi-colon delimited connection string
            </summary>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Connection.ValidParameter(System.String)">
            <summary>
            Determines if the supplied value is a valid param
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Entities.Acls.Acl">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Acls.Acl.Permission">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Acls.Acl.Resource">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Acls.Acl.Subject">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Acls.Acl.Verb">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Entities.Entity">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Entity.Id">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption">
            <summary>
            Recurrence configuration for a given worker
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.Day">
            <summary>
            Integer representation of the day
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.DayOfWeek">
            <summary>
            Specifies the day of the week
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.Hour">
            <summary>
            Integer representation of the hour
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.Minute">
            <summary>
            Integer representation of the minute
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.Month">
            <summary>
            Integer representation of the month
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption.Recurrence">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Errors.Composition">
            <summary>
            Object to provide composition extension methods for the Result object
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Composition.Then``2(AndcultureCode.CSharp.Core.Models.Errors.Result{``1},System.Func{``1,AndcultureCode.CSharp.Core.Models.Errors.Result{``0}})">
            <summary>
            Compose together methods that Produce Results in order from left to right
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="eitherResult">The <see cref="T:AndcultureCode.CSharp.Core.Models.Errors.Result`1"/> of the method on the left of the "then"</param>
            <param name="function">The function called inside of the "then"</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Composition.Then``2(AndcultureCode.CSharp.Core.Models.Errors.PagedResult{``1},System.Func{``1,AndcultureCode.CSharp.Core.Models.Errors.PagedResult{``0}})">
            <summary>
            Compose together methods that Produce Paged Results  in order from left to right
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="eitherResult">The <see cref="T:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1"/> of the method on the left of the "then"</param>
            <param name="function">The function called inside of the "then"</param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Errors.Error">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Error.ErrorType">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Error.Key">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Error.Message">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.ErrorCount">
            <summary>
            Gets the number of errors, if there are any; otherwise, returns 0.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.Errors">
            <summary>
            List of errors around a request
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.HasErrors">
            <summary>
            Returns whether or not this result has any errors
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.NextLinkParams">
            <summary>
            List of key value pairs to be used request the very next related Result
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.ResultObject">
            <summary>
            Actual resulting value from the request
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.RowCount">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.#ctor(`0,System.Int64)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="rows"></param>
            <param name="rowCount"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.#ctor(`0,System.Int64,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="rows"></param>
            <param name="rowCount"></param>
            <param name="nextLinkParams"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.#ctor(System.String)">
            <summary>
            Constructs a PagedResult in the Error State
            </summary>
            <param name="errorMessage">a string representing the error</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.#ctor(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError})">
            <summary>
            constructor to set the entire errors object
            </summary>
            <param name="errors">a collection of <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IError"/></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.PagedResult`1.Match``1(System.Func{`0,``0},System.Func{System.Collections.Generic.List{AndcultureCode.CSharp.Core.Interfaces.IError},``0})">
            <inheritdoc/>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Errors.Result`1">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Result`1.ErrorCount">
            <summary>
            Gets the number of errors, if there are any; otherwise, returns 0.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Result`1.Errors">
            <summary>
            List of errors around a request
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Result`1.HasErrors">
            <summary>
            Returns whether or not this result has any error
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Result`1.NextLinkParams">
            <summary>
            List of key value pairs to be used request the very next related Result
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Errors.Result`1.ResultObject">
            <summary>
            Actual resulting value from the request
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.#ctor">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.#ctor(System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.#ctor(System.Collections.Generic.IEnumerable{AndcultureCode.CSharp.Core.Interfaces.IError})">
            <summary>
            constructor to set the entire errors object
            </summary>
            <param name="errors">a collection of <see cref="T:AndcultureCode.CSharp.Core.Interfaces.IError"/></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.#ctor(System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="errorKey"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.#ctor(`0)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resultObject"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Errors.Result`1.Match``1(System.Func{`0,``0},System.Func{System.Collections.Generic.List{AndcultureCode.CSharp.Core.Interfaces.IError},``0})">
            <inheritdoc/>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Hosting.AndcultureCodeWebHostBuilder">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Hosting.AndcultureCodeWebHostBuilder.Args">
            <summary>
            The command line args to dotnet process. Ultimately piped to AspNetCore WebHost.
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Hosting.AndcultureCodeWebHostBuilder.#ctor">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Hosting.AndcultureCodeWebHostBuilder.#ctor(System.String[])">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Hosting.AndcultureCodeWebHostBuilder.CreateDefaultBuilder">
            <summary>
            Simple wrapper around AspNetCore WebHost.CreateDefaultBuilder
            to support our own extensibility model
            </summary>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Localization.Culture">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.Culture.Code">
            <summary>
            RFC-4646 5-character Culture code (xx-XX)
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.Culture.CultureTranslations">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.Culture.IsDefault">
            <summary>
            Is this the default locale in the application? There can only be one
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Localization.CultureTranslation">
             <summary>
             Translation of a specific term/key for the related culture.
            
             Keys are in the language of the default culture. (Hopefully the language of this code base :)
             </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.CultureTranslation.CultureCode">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.CultureTranslation.FilePath">
            <summary>
            Translation file from which this translation was loaded
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.CultureTranslation.Key">
            <summary>
            Unique key identifying the translation
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Localization.CultureTranslation.Value">
            <summary>
            Translation of message for this culture
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Lockable">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Lockable.LockedById">
            <summary>
            The identifier of the user who locked the record
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Lockable.LockedOn">
            <summary>
            The date and time of when the record was locked
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Lockable.LockedUntil">
            <summary>
            The date and time for when the record will stop being locked
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Lockable.IsLocked">
            <summary>
            Calculated field based on if LockedUntil (when not null) is in the past or future.
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Lockable.DetermineIfLocked">
            <summary>
            A record is considered "locked" if the LockedUntil field is not null
            and is set to a time in the future
            </summary>
            <returns>true if LockedUntil is not null and is set to a time in the future, false otherwise</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings">
            <summary>
            Commonly used email settings
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.ERROR_MISSING_PROPERTY">
            <summary>
            Required property is not supplied
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.CustomHeaders">
            <summary>
            Comma-separated list of custom X-Headers
            </summary>
            <value>Example: 'X-MyHeader: MyValue'</value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.SendTestEmail">
            <summary>
            Should a test email be used?
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.CustomHeadersAsDictionary">
            <summary>
            Transforms 'CustomHeaders' into a dictionary
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.DeveloperEmailAddress">
            <summary>
            This email address is for global use of background jobs and other processes
            that warrant developer attention if it fails or succeeds
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.TestEmailAddress">
            <summary>
             This email address is used for automated testing
            </summary>
            <value></value>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.TestEmailEnvironmentToken">
            <summary>
            Test email's environment token
            </summary>
            <value></value>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.GetDeveloperEmailAddress(System.String)">
            <summary>
            Returns developer account email address for specified environment
            </summary>
            <param name="environmentName"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Mail.EmailSettings.GetRecipientEmailOrTest(System.String,System.String,System.Boolean)">
            <summary>
            Handles determining if we are sending a test e-mail or not, and creates a list containing the appropriate address.
            </summary>
            <param name="email">The intended recipient e-mail</param>
            <param name="environmentName"></param>
            <param name="isProduction"></param>
            <returns>Returns a list containing the appropriate address. Returns an empty list if we're not on production and environment variables don't indicate to send a test e-mail.</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Security.AccessRule">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.AccessRule.Permission">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.AccessRule.Resource">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.AccessRule.Subject">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.AccessRule.Verb">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.AccessRule.#ctor(System.String,System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
            <param name="subject"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Security.Allow">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.Allow.Permission">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.Allow.#ctor(System.String,System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
            <param name="subject"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Security.Deny">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.Deny.Permission">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.Deny.#ctor(System.String,System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
            <param name="subject"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb.Resource">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb.Verb">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb.#ctor(System.String,System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resource"></param>
            <param name="verb"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb.#ctor(System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <param name="resourceVerb"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Models.Security.ResourceVerb.ToString">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/38
            </summary>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Providers.EmailProviderBase">
            <summary>
            Base abstract class to provide email provider functionality
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.EmailProviderBase.Send(MimeKit.MimeMessage)">
            <summary>
            Deliver a message now
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.EmailProviderBase.SendLater(MimeKit.MimeMessage)">
            <summary>
            Deliver a message later (via background jobs likely)
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Providers.Configuration.LocalConfigurationProvider">
            <summary>
            Centralized location for loading configuration settings
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Configuration.LocalConfigurationProvider.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Configuration.LocalConfigurationProvider.GetConfiguration">
            <summary>
            Constructs configuration object
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Providers.Provider">
            <summary>
            Base implementation for Providers
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Providers.Provider.Implemented">
            <summary>
            Specify whether the provider has been implemented
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Providers.Provider.Name">
            <summary>
            Name of the provider
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider">
            <summary>
            Base class for implementing common worker functionality
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Delete(System.String)">
            <summary>
            Deletes a job by its identifier
            </summary>
            <param name="id">job identifier</param>
            <returns>success status</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.DeletedCount">
            <summary>
            Count of deleted jobs
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Enqueue(System.Linq.Expressions.Expression{System.Action})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Enqueue``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.EnqueuedCount(System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="queue"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Recur(System.String,System.Linq.Expressions.Expression{System.Action},AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="id"></param>
            <param name="methodCall"></param>
            <param name="recurringOptions"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Recur``1(System.String,System.Linq.Expressions.Expression{System.Action{``0}},System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="id"></param>
            <param name="methodCall"></param>
            <param name="chronExpression"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Recur``1(System.String,System.Linq.Expressions.Expression{System.Action{``0}},AndcultureCode.CSharp.Core.Models.Entities.Worker.RecurringOption)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="id"></param>
            <param name="methodCall"></param>
            <param name="recurringOptions"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.RecurringCount">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.RemoveRecurrence(System.String)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Schedule(System.Linq.Expressions.Expression{System.Action},System.DateTimeOffset)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <param name="enqueueOn"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.DateTimeOffset)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <param name="enqueueOn"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Schedule(System.Linq.Expressions.Expression{System.Action},System.TimeSpan)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Providers.Worker.WorkerProvider.Schedule``1(System.Linq.Expressions.Expression{System.Action{``0}},System.TimeSpan)">
            <summary>
            TODO https://github.com/AndcultureCode/AndcultureCode.CSharp.Core/issues/39
            </summary>
            <param name="methodCall"></param>
            <param name="delay"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.SeedsBase`1">
            <summary>
            Shared functionality for configuring application data seeding
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.SeedsBase`1.Context">
            <summary>
            Application's data context
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.SeedsBase`1.IsDevelopment">
            <summary>
            Should development seeds be run?
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.SeedsBase`1.Logger">
            <summary>
            Logger instance
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.SeedsBase`1.ServiceProvider">
            <summary>
            Application's dependency registry
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.#ctor(System.IServiceProvider,System.Boolean)">
            <summary>
            Shared functionality for configuring application data seeding
            </summary>
            <param name="serviceProvider">Application's dependency registry</param>
            <param name="isDevelopment">Should development seeds be run?</param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.Create">
            <summary>
            Primary entry point to initialize seed data
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.GetDep``1">
            <summary>
            Retrieve dependency from registry
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.Log(System.String,System.String)">
            <summary>
            Log message for seed name
            </summary>
            <param name="seedName"></param>
            <param name="message"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.Log``1(System.String)">
            <summary>
            Log message for seed type
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.LogEnd``1">
            <summary>
            Signify completion of seeding a particular type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.LogEnd(System.String)">
            <summary>
            Signify completion of seeding a particular seed name
            </summary>
            <param name="seedName"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.LogStart``1">
            <summary>
            Signify start to seeding a particular type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.LogStart(System.String)">
            <summary>
            Signify start to seeding a particular seed name
            </summary>
            <param name="seedName"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.CreateBase">
            <summary>
            Seed data that is required for the application to run, regardless of the environment
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.SeedsBase`1.CreateDevelopment">
            <summary>
            Seed data that is only for development environments (ie. test accounts, use cases)
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys">
            <summary>
            Eased creation of cache keys
            </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys.DEFAULT_DELIMITER">
            <summary>
            Default delimiter used for creating cache keys
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys.GetKey``1(System.Int64,System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>
            Construct standardized cache keys for entities with optional include properties
            </summary>
            <param name="id"></param>
            <param name="includeProperties"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys.GetKey``2(System.Int64,System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{``1,System.Object}}})">
            <summary>
            Construct standardized cache keys for entities with optional include properties
            </summary>
            <param name="id"></param>
            <param name="includeProperties"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys.GetKey``1(System.Int64,System.String,System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>
            Construct standardized cache keys for entities with optional include properties
            </summary>
            <param name="id"></param>
            <param name="delimiter"></param>
            <param name="includeProperties"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Caching.CacheKeys.GetKey``2(System.Int64,System.String,System.Collections.Generic.List{System.Linq.Expressions.Expression{System.Func{``1,System.Object}}})">
            <summary>
            Construct standardized cache keys for entities with optional include properties
            </summary>
            <param name="id"></param>
            <param name="delimiter"></param>
            <param name="includeProperties"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider">
             <summary>
             Adds support to read environment variables from an Amazon Elastic Beanstalk EC2 instance
            
             At this time AWS stores these environment variables in its own proprietary configuration
             that we are forced to read and pipe to the application.
             </summary>
        </member>
        <member name="F:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.CONFIGURATION_FILE_PATH">
            <summary>
            Absolute path to the AWS Elastic Beanstalk windows instance configuration file
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.ConfigurationFilePath">
            <summary>
            Path for the AWS Elastic Beanstalk configuration file
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.StdoutEnabled">
            <summary>
            Determines if logging to standard output should be enabled
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider"></see> class with default values for <see cref="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.ConfigurationFilePath"/> and <see cref="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.StdoutEnabled"/>
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider"></see> class with optional values for <see cref="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.ConfigurationFilePath"/> and <see cref="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.StdoutEnabled"/>
            </summary>
            <param name="stdoutEnabled">Enables logging to standard output</param>
            <param name="configurationFilePath">Path to configuration file, if not provided the value of <see cref="F:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.CONFIGURATION_FILE_PATH"/> will be used</param>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.CachedConfiguration">
            <summary>
            Must be static to cache initially loaded configuration across multiple requests
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.Get(System.String)">
            <summary>
            Gets the value of an environment variable by the given <paramref name="key"/>
            </summary>
            <param name="key">The string identifying the requested variable</param>
            <returns>The environment variable or <c>null</c> if the key isn't present</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.Has(System.String)">
            <summary>
            Checks if an environment variable by the given <paramref name="key"/> is present in the configuration
            </summary>
            <param name="key">The string identifying the requested variable</param>
            <returns><c>true</c> if the variable exists <c>false</c> otherwise</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.Read">
            <summary>
            Reads the configuration from the <see cref="P:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.ConfigurationFilePath"/> and returns it as an IDictionary
            </summary>
            <remarks>
            <para>If the configuration file doesn't exist it returns an empty dictionary</para>
            <para>The return value might be cached</para>
            </remarks>
            <returns>A dictionary of key/values for all the environment variables in the configuration</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider.Load">
            <summary>
            Load the configuration into the inherited 'Data' dictionary for use by ConfigurationRoot/Builder
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationSource">
            <summary>
            Class used to create a <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider"/> that reads Amazon Elastic Beanstalk instance environment variables
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Builds a <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider"/> that reads Amazon Elastic Beanstalk instance environment variables
            </summary>
            <param name="builder"></param>
            <returns>A new <see cref="T:AndcultureCode.CSharp.Core.Utilities.Configuration.AmazonEBConfigurationProvider"/> with default values</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils">
            <summary>
            Static utility class to aid in configuration
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils.Builder">
            <summary>
            Returns current instance of configuration builder
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils.GetConfiguration">
            <summary>
            Retrieve current instance of IConfigurationRoot
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils.GetConnectionString(System.String)">
            <summary>
            Retrieve currently configured connection string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils.SetConfiguration(Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            Assign new instance of IConfigurationRoot
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Configuration.ConfigurationUtils.SetConnectionString(System.String)">
            <summary>
            Explicitly set connection string at runtime. When set at runtime, this superceeds
            values from the loaded configurationRoot object.
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Hosting.AndcultureCodeWebHost">
            <summary>
            Static class related to our custom <see cref="T:Microsoft.AspNetCore.WebHost"/> builder pattern
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Hosting.AndcultureCodeWebHost.Preload(System.String[])">
            <summary>
            Entry point to our custom WebHost builder pattern.
            From here extensions methods can but hung off of IAndcultureCodeWebHostBuilder
            </summary>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils">
            <summary>
            Static class with helper functions related to localization
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.Cultures">
            <summary>
            Current cultures supported by the application
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.CultureInfos">
            <summary>
            List of supported CultureInfo
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.DefaultCulture">
            <summary>
            Default culture for the application
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.DefaultCultureCode">
            <summary>
            Code of the default culture for the application
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.DefaultCultureInfo">
            <summary>
            CultureInfo of the default culture fore the application
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.CultureByCode(System.String)">
            <summary>
            Retrieves the <see cref="T:AndcultureCode.CSharp.Core.Interfaces.ICulture"/> from the supported Cultures by <paramref name="cultureCode"/>
            </summary>
            <param name="cultureCode"></param>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.CultureCodes(System.String)">
            <summary>
            Retrieves the codes of the current cultures supported by the application
            </summary>
            <param name="delimiter"></param>
            <returns>A concatenated string delimited by <paramref name="delimiter"/></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Localization.LocalizationUtils.CultureExists(System.String)">
            <summary>
            Checks if a culture by the given <paramref name="cultureCode"/> is supported by the application
            </summary>
            <param name="cultureCode">The string identifying the requested culture</param>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Network.UriUtils">
            <summary>
            URI related helper functions
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Network.UriUtils.IsInvalidHttpUrl(System.String)">
            <summary>
            Is the supplied source url an invalid HTTP URL?
            </summary>
            <returns></returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Network.UriUtils.IsValidHttpUrl(System.String)">
            <summary>
            Is the supplied source url a valid HTTP URL?
            </summary>
            <returns></returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Security.EncryptionUtils">
            <summary>
            Commonly used encryption related functionality
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Security.EncryptionUtils.GenerateHash(System.String,System.String,System.Int32,System.UInt16)">
            <summary>
            Generates a hash from the given value and salt
            </summary>
            <param name="value">Value to hash</param>
            <param name="salt">Salt to use (base 64 string)</param>
            <param name="iterationCount">Iterations to perform (at least 10000)</param>
            <param name="bits">Size of the hash in bits</param>
            <returns>Base 64 encoded string of the hash</returns>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Security.EncryptionUtils.GenerateSalt(System.UInt16)">
            <summary>
            Generate a salt to be used for hashing
            </summary>
            <param name="bits">Size of the salt to generate in bits (must be a multiple of 8)</param>
            <returns>Base 64 encoded string of the salt</returns>
        </member>
        <member name="T:AndcultureCode.CSharp.Core.Utilities.Security.GuidUtils">
            <summary>
            Guid related helper functions
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Security.GuidUtils.IsInvalid(System.String)">
            <summary>
            Is the supplied string an invalid GUID?
            </summary>
        </member>
        <member name="M:AndcultureCode.CSharp.Core.Utilities.Security.GuidUtils.IsValid(System.String)">
            <summary>
            Is the supplied string an valid GUID?
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration">
            <summary>
            Cookie authentication settings
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration.AccessDeniedPath">
            <summary>
            Where to redirect user when access is denied.
            Only applies to traditional web view auth flows.
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration.AuthenticationScheme">
            <summary>
            Authentication scheme identifier
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration.CookieName">
            <summary>
            Cookie identifier
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration.IsEnabled">
            <summary>
            Is cookie authentication currently enabled?
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.CookieAuthenticationConfiguration.LoginPath">
            <summary>
            Where to redirect the user when they are required to login.
            Only applies to traditional web view auth flows.
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Business.Core.Models.Configuration.OAuthAccountConfiguration">
            <summary>
            Describes common configuration for OAuth providers
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.OAuthAccountConfiguration.ClientId">
            <summary>
            Application's uniquely assigned Id
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.OAuthAccountConfiguration.ClientSecret">
            <summary>
            Application's uniquely assigned Secret
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.OAuthAccountConfiguration.IsDisabled">
            <summary>
            Is this integration disabled?
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.OAuthAccountConfiguration.IsEnabled">
            <summary>
            Is this integration enabled?
            </summary>
        </member>
        <member name="T:AndcultureCode.CSharp.Business.Core.Models.Configuration.SeedsConfiguration">
            <summary>
            Configuration values around data seeding
            </summary>
        </member>
        <member name="P:AndcultureCode.CSharp.Business.Core.Models.Configuration.SeedsConfiguration.DefaultUserPassword">
            <summary>
            Password to use when new development/test users are seeded
            </summary>
            <value></value>
        </member>
    </members>
</doc>
